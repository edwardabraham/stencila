{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "https://raw.githubusercontent.com/stencila/stencila/main/json-schema/PostalAddress.schema.json",
  "title": "PostalAddress",
  "@id": "schema:PostalAddress",
  "extends": "ContactPoint",
  "status": "stable",
  "description": "A physical mailing address.",
  "properties": {
    "type": {
      "@id": "schema:type",
      "description": "The name of the type",
      "$comment": "This is a special property analogous to JSON-LD's `@type` keyword.\nIt is extended with the titles of all descendant types during\nthe generation of schema.json files.\n",
      "type": "string",
      "enum": [
        "PostalAddress"
      ],
      "default": "PostalAddress",
      "from": "Entity"
    },
    "id": {
      "@id": "schema:id",
      "description": "The identifier for this item",
      "$comment": "This is a special property analogous to JSON-LD's `@id` keyword.\n",
      "type": "string",
      "from": "Entity"
    },
    "alternateNames": {
      "@id": "schema:alternateName",
      "description": "Alternate names (aliases) for the item.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "from": "Thing",
      "isArray": true,
      "isPlural": true,
      "aliases": [
        "alternateName"
      ]
    },
    "description": {
      "@id": "schema:description",
      "description": "A description of the item.",
      "type": "array",
      "items": {
        "$ref": "BlockContent.schema.json"
      },
      "from": "Thing",
      "isArray": true
    },
    "identifiers": {
      "@id": "schema:identifier",
      "description": "Any kind of identifier for any kind of Thing.",
      "$comment": "Some identifiers have specific properties e.g the `issn` property for\nthe `Periodical` type. These should be used in preference to this\nproperty which is intended for identifiers that do not yet have a\nspecific property. Identifiers can be represented as strings, but\nusing a `PropertyValue` will usually be better because it allows\nfor `propertyID` (i.e. the type of identifier).\n",
      "type": "array",
      "items": {
        "anyOf": [
          {
            "$ref": "PropertyValue.schema.json"
          },
          {
            "type": "string"
          }
        ]
      },
      "from": "Thing",
      "isArray": true,
      "isPlural": true,
      "aliases": [
        "identifier"
      ]
    },
    "images": {
      "@id": "schema:image",
      "description": "Images of the item.",
      "type": "array",
      "items": {
        "anyOf": [
          {
            "$ref": "ImageObject.schema.json"
          },
          {
            "type": "string",
            "format": "uri"
          }
        ]
      },
      "from": "Thing",
      "isArray": true,
      "isPlural": true,
      "aliases": [
        "image"
      ]
    },
    "name": {
      "@id": "schema:name",
      "description": "The name of the item.",
      "type": "string",
      "from": "Thing"
    },
    "url": {
      "@id": "schema:url",
      "description": "The URL of the item.",
      "type": "string",
      "format": "uri",
      "from": "Thing"
    },
    "availableLanguages": {
      "@id": "schema:availableLanguage",
      "description": "Languages (human not programming) in which it is possible to communicate\nwith the organization/department etc.\n",
      "type": "array",
      "items": {
        "type": "string"
      },
      "from": "ContactPoint",
      "isArray": true,
      "isPlural": true,
      "aliases": [
        "availableLanguage"
      ]
    },
    "emails": {
      "@id": "schema:email",
      "description": "Email address for correspondence.",
      "type": "array",
      "items": {
        "type": "string",
        "format": "email"
      },
      "from": "ContactPoint",
      "isArray": true,
      "isPlural": true,
      "aliases": [
        "email"
      ]
    },
    "telephoneNumbers": {
      "@id": "schema:telephone",
      "aliases": [
        "telephone",
        "telephoneNumber"
      ],
      "description": "Telephone numbers for the contact point.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "from": "ContactPoint",
      "isArray": true,
      "isPlural": true
    },
    "streetAddress": {
      "@id": "schema:streetAddress",
      "description": "The street address.",
      "$comment": "For example, 10 Downing Street.",
      "type": "string",
      "from": "PostalAddress"
    },
    "postOfficeBoxNumber": {
      "@id": "schema:postOfficeBoxNumber",
      "description": "The post office box number.",
      "type": "string",
      "from": "PostalAddress"
    },
    "addressLocality": {
      "@id": "schema:addressLocality",
      "description": "The locality in which the street address is, and which is in the region.",
      "$comment": "For example, London.",
      "type": "string",
      "from": "PostalAddress"
    },
    "addressRegion": {
      "@id": "schema:addressRegion",
      "description": "The region in which the locality is, and which is in the country.",
      "$comment": "For example, California or another appropriate first-level Administrative division",
      "type": "string",
      "from": "PostalAddress"
    },
    "postalCode": {
      "@id": "schema:postalCode",
      "description": "The postal code.",
      "$comment": "For example, 94043.",
      "type": "string",
      "from": "PostalAddress"
    },
    "addressCountry": {
      "@id": "schema:addressCountry",
      "description": "The country.",
      "$comment": "For example, United Kingdom. You can also provide the two-letter ISO 3166-1 alpha-2 country code.",
      "type": "string",
      "from": "PostalAddress"
    }
  },
  "source": "https://github.com/stencila/stencila/blob/main/schema/yaml/PostalAddress.yaml",
  "children": [],
  "descendants": [],
  "type": "object",
  "additionalProperties": false,
  "required": [
    "type"
  ],
  "propertyAliases": {
    "alternateName": "alternateNames",
    "identifier": "identifiers",
    "image": "images",
    "availableLanguage": "availableLanguages",
    "email": "emails",
    "telephone": "telephoneNumbers",
    "telephoneNumber": "telephoneNumbers"
  }
}