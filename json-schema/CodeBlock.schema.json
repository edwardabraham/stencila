{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "https://raw.githubusercontent.com/stencila/stencila/main/json-schema/CodeBlock.schema.json",
  "title": "CodeBlock",
  "@id": "stencila:CodeBlock",
  "extends": "CodeStatic",
  "status": "stable",
  "description": "A code block.",
  "properties": {
    "type": {
      "@id": "schema:type",
      "description": "The name of the type",
      "$comment": "This is a special property analogous to JSON-LD's `@type` keyword.\nIt is extended with the titles of all descendant types during\nthe generation of schema.json files.\n",
      "type": "string",
      "enum": [
        "CodeBlock"
      ],
      "default": "CodeBlock",
      "from": "Entity"
    },
    "id": {
      "@id": "schema:id",
      "description": "The identifier for this item",
      "$comment": "This is a special property analogous to JSON-LD's `@id` keyword.\n",
      "type": "string",
      "from": "Entity"
    },
    "code": {
      "@id": "stencila:code",
      "description": "The code.",
      "type": "string",
      "from": "CodeStatic"
    },
    "programmingLanguage": {
      "@id": "schema:programmingLanguage",
      "description": "The programming language of the code.",
      "type": "string",
      "from": "CodeStatic"
    },
    "mediaType": {
      "@id": "schema:encodingFormat",
      "aliases": [
        "encodingFormat"
      ],
      "description": "Media type, typically expressed using a MIME format, of the code.",
      "$comment": "This property allows the differentiation of formats using the same programming language\nor variants of a programming language. An example is using `programmingLanguage` \"json\" and\n`encodingFormat` \"application/ld+json\" for JSON-LD code examples.\n",
      "type": "string",
      "from": "CodeStatic"
    }
  },
  "source": "https://github.com/stencila/stencila/blob/main/schema/yaml/CodeBlock.yaml",
  "children": [],
  "descendants": [],
  "type": "object",
  "additionalProperties": false,
  "required": [
    "type",
    "code"
  ],
  "propertyAliases": {
    "encodingFormat": "mediaType"
  }
}