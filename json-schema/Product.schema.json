{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "https://raw.githubusercontent.com/stencila/stencila/main/json-schema/Product.schema.json",
  "title": "Product",
  "@id": "schema:Product",
  "extends": "Thing",
  "status": "stable",
  "description": "Any offered product or service. For example, a pair of shoes;\na haircut; or an episode of a TV show streamed online.\n",
  "$comment": "The `Product` type allows you to provide details about a product such as the product\nbrand, logo and ID. This type can be used as any kind of product that is not [`CreativeWork`](./CreativeWork) item.\n\n`Product` is analogous, and structurally similar to, the \nJATS XML [`<product>`](https://jats.nlm.nih.gov/archiving/tag-library/1.1/element/product.html) element which\ncontains the metadata concerning one product (for example, a book, software package, website, or\nhardware component) discussed in an article.\n\nTo meet Google's guidelines for [`Product`](https://developers.google.com/search/docs/data-types/product#product)\ninstances are required to have `image` and `name` properties.\n",
  "properties": {
    "type": {
      "@id": "schema:type",
      "description": "The name of the type",
      "$comment": "This is a special property analogous to JSON-LD's `@type` keyword.\nIt is extended with the titles of all descendant types during\nthe generation of schema.json files.\n",
      "type": "string",
      "enum": [
        "Product"
      ],
      "default": "Product",
      "from": "Entity"
    },
    "id": {
      "@id": "schema:id",
      "description": "The identifier for this item",
      "$comment": "This is a special property analogous to JSON-LD's `@id` keyword.\n",
      "type": "string",
      "from": "Entity"
    },
    "alternateNames": {
      "@id": "schema:alternateName",
      "description": "Alternate names (aliases) for the item.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "from": "Thing",
      "isArray": true,
      "isPlural": true,
      "aliases": [
        "alternateName"
      ]
    },
    "description": {
      "@id": "schema:description",
      "description": "A description of the item.",
      "type": "array",
      "items": {
        "$ref": "BlockContent.schema.json"
      },
      "from": "Thing",
      "isArray": true
    },
    "identifiers": {
      "@id": "schema:identifier",
      "description": "Any kind of identifier for any kind of Thing.",
      "$comment": "Some identifiers have specific properties e.g the `issn` property for\nthe `Periodical` type. These should be used in preference to this\nproperty which is intended for identifiers that do not yet have a\nspecific property. Identifiers can be represented as strings, but\nusing a `PropertyValue` will usually be better because it allows\nfor `propertyID` (i.e. the type of identifier).\n",
      "type": "array",
      "items": {
        "anyOf": [
          {
            "$ref": "PropertyValue.schema.json"
          },
          {
            "type": "string"
          }
        ]
      },
      "from": "Thing",
      "isArray": true,
      "isPlural": true,
      "aliases": [
        "identifier"
      ]
    },
    "images": {
      "@id": "schema:image",
      "description": "Images of the item.",
      "type": "array",
      "items": {
        "anyOf": [
          {
            "$ref": "ImageObject.schema.json"
          },
          {
            "type": "string",
            "format": "uri"
          }
        ]
      },
      "from": "Thing",
      "isArray": true,
      "isPlural": true,
      "aliases": [
        "image"
      ]
    },
    "name": {
      "@id": "schema:name",
      "description": "The name of the item.",
      "type": "string",
      "from": "Thing"
    },
    "url": {
      "@id": "schema:url",
      "description": "The URL of the item.",
      "type": "string",
      "format": "uri",
      "from": "Thing"
    },
    "brands": {
      "@id": "schema:brand",
      "description": "Brands that the product is labelled with.",
      "type": "array",
      "items": {
        "$ref": "Brand.schema.json"
      },
      "from": "Product",
      "isArray": true,
      "isPlural": true,
      "aliases": [
        "brand"
      ]
    },
    "logo": {
      "@id": "schema:logo",
      "description": "The logo of the product.",
      "anyOf": [
        {
          "$ref": "ImageObject.schema.json"
        },
        {
          "type": "string",
          "format": "uri"
        }
      ],
      "from": "Product"
    },
    "productID": {
      "@id": "schema:productID",
      "description": "Product identification code.",
      "type": "string",
      "from": "Product"
    }
  },
  "examples": [
    {
      "type": "Product",
      "brand": {
        "type": "Brand",
        "name": "Astro"
      },
      "name": "Astrolabe",
      "logo": {
        "type": "ImageObject",
        "contentUrl": "http://www.product-astrolabe.com/logo.png",
        "caption": "Astrolabe Logo"
      },
      "productID": "AA55"
    }
  ],
  "source": "https://github.com/stencila/stencila/blob/main/schema/yaml/Product.yaml",
  "children": [],
  "descendants": [],
  "type": "object",
  "propertyAliases": {
    "alternateName": "alternateNames",
    "identifier": "identifiers",
    "image": "images",
    "brand": "brands"
  },
  "additionalProperties": false,
  "required": [
    "type"
  ]
}