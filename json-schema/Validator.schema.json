{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "https://raw.githubusercontent.com/stencila/stencila/main/json-schema/Validator.schema.json",
  "title": "Validator",
  "@id": "stencila:Validator",
  "extends": "Entity",
  "status": "unstable",
  "description": "A base for all validator types.",
  "$comment": "The main purpose of this type is to obtain a generated union type\nfor all validators.\n",
  "source": "https://github.com/stencila/stencila/blob/main/schema/yaml/Validator.yaml",
  "children": [
    "ArrayValidator",
    "BooleanValidator",
    "ConstantValidator",
    "DateTimeValidator",
    "DateValidator",
    "DurationValidator",
    "EnumValidator",
    "NumberValidator",
    "StringValidator",
    "TimeValidator",
    "TimestampValidator",
    "TupleValidator"
  ],
  "descendants": [
    "ArrayValidator",
    "BooleanValidator",
    "ConstantValidator",
    "DateTimeValidator",
    "DateValidator",
    "DurationValidator",
    "EnumValidator",
    "IntegerValidator",
    "NumberValidator",
    "StringValidator",
    "TimeValidator",
    "TimestampValidator",
    "TupleValidator"
  ],
  "properties": {
    "type": {
      "@id": "schema:type",
      "description": "The name of the type",
      "$comment": "This is a special property analogous to JSON-LD's `@type` keyword.\nIt is extended with the titles of all descendant types during\nthe generation of schema.json files.\n",
      "type": "string",
      "enum": [
        "Validator",
        "ArrayValidator",
        "BooleanValidator",
        "ConstantValidator",
        "DateTimeValidator",
        "DateValidator",
        "DurationValidator",
        "EnumValidator",
        "IntegerValidator",
        "NumberValidator",
        "StringValidator",
        "TimeValidator",
        "TimestampValidator",
        "TupleValidator"
      ],
      "default": "Validator",
      "from": "Entity"
    },
    "id": {
      "@id": "schema:id",
      "description": "The identifier for this item",
      "$comment": "This is a special property analogous to JSON-LD's `@id` keyword.\n",
      "type": "string",
      "from": "Entity"
    }
  },
  "required": [
    "type"
  ],
  "propertyAliases": {}
}