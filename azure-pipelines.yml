strategy:
  matrix:
    linux:
      image_name: ubuntu-latest
    mac:
      image_name: macOS-latest
    windows:
      image_name: windows-latest

pool:
  vmImage: $(image_name)

steps:
  - task: Cache@2
    inputs:
      path: $(Build.SourcesDirectory)/target
      key: 'rust | "$(Agent.OS)" | Cargo.lock'

  - script: |
      set -e
      curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal --default-toolchain stable
      echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
      cargo install cargo-strip cargo-tarpaulin
    displayName: Install Rust (Linux, Mac)
    condition: not(eq(variables['Agent.OS'], 'Windows_NT'))

  - script: |
      curl -sSf -o rustup-init.exe https://win.rustup.rs
      rustup-init.exe -y --profile minimal --default-toolchain stable --default-host x86_64-pc-windows-msvc
      set PATH=%PATH%;%USERPROFILE%\.cargo\bin
      echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
      cargo install cargo-strip
    displayName: Install Rust (Windows)
    condition: eq(variables['Agent.OS'], 'Windows_NT')

  - script: make lint
    displayName: Run linting (Linux)
    condition: eq(variables['Agent.OS'], 'Linux')

  - script: make cover
    displayName: Run tests with coverage (Linux)
    condition: eq(variables['Agent.OS'], 'Linux')

  - script: bash <(curl -s https://codecov.io/bash)
    displayName: Upload coverage (Linux)
    condition: and(succeeded(), eq(variables['Agent.OS'], 'Linux'))

  - script: make test
    displayName: Run tests (Mac, Windows)
    condition: not(eq(variables['Agent.OS'], 'Linux'))

  - script: make build
    displayName: Build packages

  - script: make docs
    displayName: Build docs (Linux)
    condition: eq(variables['Agent.OS'], 'Linux')

  - script: |
      npm ci
      npx semantic-release
    displayName: Release package and docs (Linux; if necessary)
    condition: and(succeeded(), eq(variables['Agent.OS'], 'Linux'), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    env:
      GIT_AUTHOR_NAME: Stencila CI Bot
      GIT_AUTHOR_EMAIL: ci@stenci.la
      GIT_COMMITTER_NAME: Stencila CI Bot
      GIT_COMMITTER_EMAIL: ci@stenci.la
      GITHUB_TOKEN: $(GITHUB_TOKEN)
