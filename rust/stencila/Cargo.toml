# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[package]
name = "stencila"
version = "0.133.1"
authors = ["Stencila <hello@stenci.la>"]
edition = "2021"

# Compile time feature flags. See https://www.worthe-it.co.za/blog/2018-11-18-compile-time-feature-flags-in-rust.html
# All features are on by default, use `--no-default-features --features="json http ..."` to
# cherry pick certain features.
# Our use of features is somewhat over the top but should hopefully allow us to create more
# minimal binaries as needed (e.g. for creating really small container images).

[features]

cli = ["cli-utils", "structopt", "binaries/cli", "codecs/cli"]
cli-pretty = ["cli-utils/pretty", "ansi_term"]
cli-progress = ["cli-utils/progress"]
cli-interact = ["cli-utils/interact"]

serve = []
serve-stdio = ["serve"]
serve-http = ["serve", "sudo", "warp", "jsonwebtoken", "rust-embed"]
serve-ws = ["serve-http"]

request = []
request-docker = ["bollard"]
request-http = ["reqwest", "jsonwebtoken"]
request-stdio = []
request-ws = ["tokio-tungstenite", "jsonwebtoken"]

upgrade = ["self_update"]

import-elife = ["minidom"]
import-github = []

query-jmespath = ["jmespatch"]
query-jsonptr = []

default = [
  # CLI
  "cli",
  "cli-progress",
  "cli-pretty",
  "cli-interact",

  # Codecs
  "codecs/html",
  "codecs/ipynb",
  "codecs/json",
  "codecs/json5",
  "codecs/md",
  "codecs/toml",
  "codecs/txt",
  "codecs/yaml",

  # Parsers
  "parsers/calc",
  "parsers/js",
  "parsers/py",
  "parsers/r",

  # Kernels
  "kernels/cli",
  "kernels/bash",
  "kernels/calc",
  "kernels/jupyter",
  "kernels/node",
  "kernels/python",
  "kernels/r",

  "serve",
  "serve-stdio",
  "serve-http",
  "serve-ws",
  "request",
  "request-docker",
  "request-http",
  "request-stdio",
  "request-ws",
  "binaries",
  "upgrade",
  "import-elife",
  "import-github",
  "query-jsonptr",
  "query-jmespath",
  "webbrowser",
  "structopt",
]

[dependencies]
ansi_term = { version = "=0.12.1", optional = true }
async-recursion = "0.3.2"
async-trait = "=0.1.51"
bollard = { version = "=0.11.0", optional = true }
chrono = { version = "=0.4.19", features = ["serde"] }
color-eyre = { version = "=0.5.11", optional = true }
crossbeam-channel = "=0.5.1"
defaults = "=0.2.0"
derivative = "=2.2.0"
derive_more = "0.99.17"
dirs-next = "=2.0.0"
enum_dispatch = "=0.3.7"
exitcode = "=1.1.2"
eyre = "=0.6.5"
futures = "=0.3.18"
gitignore = "=1.0.7"
glob = "=0.3.0"
handlebars = "=4.1.6"
hex = "0.4.3"
humantime = "=2.1.0"
ignore = "=0.4.18"
Inflector = "0.11.4"
itertools = "0.10.1"
jmespatch = { version = "=0.3.0", optional = true }
json5 = "=0.4.1"
jsonschema = { version = "=0.12.2", optional = true }
jsonwebtoken = { version = "=7.2.0", optional = true }
maplit = "=1.0.2"
mime_guess = "=2.0.3"
minidom = { version = "=0.13.0", optional = true }
notify = "=4.0.17"
once_cell = "=1.8.0"
path-slash = "=0.1.4"
pathdiff = "=0.2.1"
portpicker = "0.1.1"
rand = "=0.8.4"
regex = "=1.5.4"
reqwest = { version = "=0.11.7", optional = true, features = ["json"] }
rust-embed = { version = "=6.2.0", features = ["compression"], optional = true }
schemars = { version = "=0.8.8", features = ["preserve_order", "chrono"] }
self_update = { version = "=0.27.0", optional = true, features = [
  "archive-tar",
  "archive-zip",
  "compression-flate2",
  "compression-zip-deflate",
] }
semver = { version = "=1.0.4", optional = true }
serde = { version = "=1.0.130", features = ["derive", "rc"] }
serde_json = { version = "=1.0.72", features = ["preserve_order"] }
serde_with = "=1.11.0"
serde_yaml = "=0.8.21"
sha2 = "0.9.8"
similar = { version = "=2.1.0", features = ["unicode"] }
slug = "=0.1.4"
stencila-schema = "=1.12.0"
structopt = { version = "=0.3.25", features = ["wrap_help"], optional = true }
strum = { version = "=0.23.0", features = ["derive"] }
strum_macros = "=0.23.1"
sudo = { version = "=0.6.0", optional = true }
tar = { version = "=0.4.37", optional = true }
tempfile = "3.2.0"
thiserror = "=1.0.30"
tokio = { version = "1.13.0", features = ["full"] }
tokio-stream = "=0.1.7"
tokio-tungstenite = { version = "=0.15.0", optional = true }
toml = "=0.5.8"
tracing = "=0.1.29"
tracing-appender = "=0.2.0"
tracing-error = "=0.2.0"
tracing-serde = "=0.1.2"
tracing-subscriber = { version = "=0.3.3", features = ["env-filter", "json"] }
unicode-segmentation = "=1.8.0"
url = "=2.2.2"
urlencoding = "2.1.0"
validator = { version = "=0.14.0", features = ["derive"] }
warp = { version = "=0.3.2", optional = true }
webbrowser = { version = "=0.5.5", optional = true }

binaries = { path = "../binaries", version = "0.0.0", optional = true }
cli-utils = { path = "../cli-utils", version = "0.0.0", optional = true }
codec = { path = "../codec", version = "0.0.0" }
codec-html = { path = "../codec-html", version = "0.0.0" }
codec-ipynb = { path = "../codec-ipynb", version = "0.0.0" }
codec-txt = { path = "../codec-txt", version = "0.0.0" }
codecs = { path = "../codecs", version = "0.0.0" }
events = { path = "../events", version = "0.0.0" }
formats = { path = "../formats", version = "0.0.0" }
graph = { path = "../graph", version = "0.0.0" }
graph-triples = { path = "../graph-triples", version = "0.0.0" }
kernels = { path = "../kernels", version = "0.0.0" }
key-utils = { path = "../key-utils", version = "0.0.0" }
node-reshape = { path = "../node-reshape", version = "0.0.0" }
parsers = { path = "../parsers", version = "0.0.0" }
path-utils = { path = "../path-utils", version = "0.0.0" }
uuids = { path = "../uuids", version = "0.0.0" }

[dev-dependencies]
insta = { version = "1.8.0", features = ["glob"] }
pretty_assertions = "1.0.0"
proptest = "1.0.0"
