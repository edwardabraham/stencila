---
source: rust/src/methods/decode/ipynb.rs
expression: decode(&content).unwrap()
input_file: fixtures/articles/polyglot.ipynb

---
{
  "type": "Article",
  "content": [
    {
      "type": "Heading",
      "content": [
        "Introduction"
      ],
      "depth": 1
    },
    {
      "type": "Paragraph",
      "content": [
        "This Jupyter Notebook test fixture illustrates having code cells and code expressions with different languages."
      ]
    },
    {
      "type": "Heading",
      "content": [
        "Code expressions"
      ],
      "depth": 1
    },
    {
      "type": "Paragraph",
      "content": [
        "Inline code expressions, using the backtick syntax (with the ",
        {
          "type": "CodeFragment",
          "text": "exec"
        },
        " keyword) can specify the language like so: ",
        {
          "type": "CodeExpression",
          "programmingLanguage": "python",
          "text": "2*2"
        },
        ". Alternatively the double brace syntax can also specify the language: ",
        {
          "type": "CodeExpression",
          "programmingLanguage": "r",
          "text": "3+3"
        },
        ". If code expressions do not specify a langauge, then Stencila falls back to the language of the notebook e.g. ",
        {
          "type": "CodeExpression",
          "programmingLanguage": "python",
          "text": "4*4"
        },
        " and ",
        {
          "type": "CodeExpression",
          "programmingLanguage": "python",
          "text": "5+5"
        },
        "."
      ]
    },
    {
      "type": "Heading",
      "content": [
        "Code cells"
      ],
      "depth": 1
    },
    {
      "type": "Paragraph",
      "content": [
        "Jupyter code cells in a notebook normally all use the same language. However, if a cell has a ",
        {
          "type": "CodeFragment",
          "text": "language_info.name"
        },
        " specified in their ",
        {
          "type": "CodeFragment",
          "text": "metadata"
        },
        " property then Stencila will use that, rather than the language from the top-level metadata of the notebook."
      ]
    },
    {
      "type": "CodeChunk",
      "programmingLanguage": "python",
      "text": "# Python"
    },
    {
      "type": "CodeChunk",
      "programmingLanguage": "javascript",
      "text": "// JavaScript"
    }
  ]
}
