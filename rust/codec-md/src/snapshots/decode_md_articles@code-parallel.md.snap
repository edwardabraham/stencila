---
source: rust/codec-md/src/decode.rs
assertion_line: 1270
expression: "decode(content).expect(\"Unable to decode Markdown\")"
input_file: fixtures/articles/code-parallel.md

---
{
  "type": "Article",
  "content": [
    {
      "type": "Paragraph",
      "content": [
        "This fixture is focussed on testing scheduling of parallel execution plans."
      ]
    },
    {
      "type": "Paragraph",
      "content": [
        "Stage 1, a single setup chunk:"
      ]
    },
    {
      "type": "CodeChunk",
      "programmingLanguage": "python",
      "text": "from time import sleep\nfrom datetime import datetime\n\nsleep(1)\nchunk1 = datetime.now()\nprint(f\"Chunk 1 succeeded at {chunk1}\")"
    },
    {
      "type": "Paragraph",
      "content": [
        "Stage 2, four code chunks that should get scheduled at the same time and execute in parallel but with different durations. Chunk 5 should begin when chunk 1 is finished and before any of the other chunks in this stage."
      ]
    },
    {
      "type": "CodeChunk",
      "programmingLanguage": "python",
      "text": "sleep(1)\nprint(f\"Chunk 2 succeeded at {datetime.now()} ({datetime.now()-chunk1} after chunk 1)\")"
    },
    {
      "type": "CodeChunk",
      "programmingLanguage": "python",
      "text": "sleep(2)\nprint(f\"Chunk 3 succeeded at {datetime.now()} ({datetime.now()-chunk1} after chunk 1)\")"
    },
    {
      "type": "CodeChunk",
      "programmingLanguage": "python",
      "text": "sleep(3)\nprint(f\"Chunk 4 succeeded at {datetime.now()} ({datetime.now()-chunk1} after chunk 1)\")"
    },
    {
      "type": "CodeChunk",
      "programmingLanguage": "python",
      "text": "sleep(1)\nchunk5 = datetime.now()\nprint(f\"Chunk 5 succeeded at {chunk5} ({chunk5-chunk1} after chunk 1)\")"
    },
    {
      "type": "Paragraph",
      "content": [
        "Stage 3, starts after chunk 5 is finished"
      ]
    },
    {
      "type": "CodeChunk",
      "programmingLanguage": "python",
      "text": "sleep(1)\nprint(f\"Chunk 6 succeeded at {datetime.now()} ({datetime.now()-chunk5} after chunk 5)\")"
    },
    {
      "type": "CodeChunk",
      "programmingLanguage": "python",
      "text": "sleep(2)\nprint(f\"Chunk 7 succeeded at {datetime.now()} ({datetime.now()-chunk5} after chunk 5)\")"
    },
    {
      "type": "CodeChunk",
      "programmingLanguage": "python",
      "text": "sleep(3)\nprint(f\"Chunk 8 succeeded at {datetime.now()} ({datetime.now()-chunk5} after chunk 5)\")"
    }
  ]
}
