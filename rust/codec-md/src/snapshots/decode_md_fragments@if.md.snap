---
source: rust/codec-md/src/decode.rs
assertion_line: 2414
expression: "decode_fragment(content, None)"
input_file: fixtures/fragments/md/if.md
---
[
  {
    "type": "Heading",
    "content": [
      "Simple"
    ],
    "depth": 1
  },
  {
    "type": "If",
    "clauses": [
      {
        "type": "IfClause",
        "code": "true",
        "content": [
          {
            "type": "Paragraph",
            "content": [
              "This paragraph should be shown."
            ]
          }
        ],
        "programmingLanguage": "",
        "guessLanguage": true
      }
    ]
  },
  {
    "type": "Heading",
    "content": [
      "Else"
    ],
    "depth": 1
  },
  {
    "type": "Paragraph",
    "content": [
      "An ",
      {
        "type": "CodeFragment",
        "code": "else"
      },
      " clause specifies the content to be rendered if the condition is not truthy,"
    ]
  },
  {
    "type": "If",
    "clauses": [
      {
        "type": "IfClause",
        "code": "false",
        "content": [
          {
            "type": "Paragraph",
            "content": [
              "This paragraph should NOT be shown."
            ]
          }
        ],
        "programmingLanguage": "",
        "guessLanguage": true
      },
      {
        "type": "IfClause",
        "code": "",
        "content": [
          {
            "type": "Paragraph",
            "content": [
              "This paragraph should be shown."
            ]
          }
        ],
        "programmingLanguage": ""
      }
    ]
  },
  {
    "type": "Heading",
    "content": [
      "Elifs"
    ],
    "depth": 1
  },
  {
    "type": "Paragraph",
    "content": [
      "Multiple ",
      {
        "type": "CodeFragment",
        "code": "elif"
      },
      " clauses are possible,"
    ]
  },
  {
    "type": "If",
    "clauses": [
      {
        "type": "IfClause",
        "code": "false",
        "content": [
          {
            "type": "Paragraph",
            "content": [
              "This first paragraph should NOT be shown."
            ]
          }
        ],
        "programmingLanguage": "",
        "guessLanguage": true
      },
      {
        "type": "IfClause",
        "code": "false",
        "content": [
          {
            "type": "Paragraph",
            "content": [
              "This second paragraph should NOT be shown."
            ]
          }
        ],
        "programmingLanguage": "",
        "guessLanguage": true
      },
      {
        "type": "IfClause",
        "code": "true",
        "content": [
          {
            "type": "Paragraph",
            "content": [
              "This third paragraph ",
              {
                "type": "Strong",
                "content": [
                  "should"
                ]
              },
              " be shown."
            ]
          }
        ],
        "programmingLanguage": "",
        "guessLanguage": true
      },
      {
        "type": "IfClause",
        "code": "true",
        "content": [
          {
            "type": "Paragraph",
            "content": [
              "This fourth paragraph should NOT be shown because the above ",
              {
                "type": "CodeFragment",
                "code": "elif"
              },
              " was."
            ]
          }
        ],
        "programmingLanguage": "",
        "guessLanguage": true
      },
      {
        "type": "IfClause",
        "code": "",
        "content": [
          {
            "type": "Paragraph",
            "content": [
              "This final paragraph should NOT be shown because the above ",
              {
                "type": "CodeFragment",
                "code": "elif"
              },
              " was."
            ]
          }
        ],
        "programmingLanguage": ""
      }
    ]
  },
  {
    "type": "Heading",
    "content": [
      "Nested"
    ],
    "depth": 1
  },
  {
    "type": "Paragraph",
    "content": [
      "Probably best avoided, but possible,"
    ]
  },
  {
    "type": "If",
    "clauses": [
      {
        "type": "IfClause",
        "code": "true",
        "content": [
          {
            "type": "If",
            "clauses": [
              {
                "type": "IfClause",
                "code": "true",
                "content": [
                  {
                    "type": "Paragraph",
                    "content": [
                      "This paragraph should be shown."
                    ]
                  }
                ],
                "programmingLanguage": "",
                "guessLanguage": true
              }
            ]
          }
        ],
        "programmingLanguage": "",
        "guessLanguage": true
      },
      {
        "type": "IfClause",
        "code": "",
        "content": [
          {
            "type": "Paragraph",
            "content": [
              "This paragraph should not be shown"
            ]
          }
        ],
        "programmingLanguage": ""
      }
    ]
  },
  {
    "type": "Paragraph",
    "content": [
      "In the following example the nested if has the ",
      {
        "type": "CodeFragment",
        "code": "else"
      },
      ","
    ]
  },
  {
    "type": "If",
    "clauses": [
      {
        "type": "IfClause",
        "code": "true",
        "content": [
          {
            "type": "If",
            "clauses": [
              {
                "type": "IfClause",
                "code": "true",
                "content": [
                  {
                    "type": "Paragraph",
                    "content": [
                      "This paragraph should be shown."
                    ]
                  }
                ],
                "programmingLanguage": "",
                "guessLanguage": true
              },
              {
                "type": "IfClause",
                "code": "",
                "content": [
                  {
                    "type": "Paragraph",
                    "content": [
                      "This paragraph should not be shown"
                    ]
                  }
                ],
                "programmingLanguage": ""
              }
            ]
          }
        ],
        "programmingLanguage": "",
        "guessLanguage": true
      }
    ]
  }
]
