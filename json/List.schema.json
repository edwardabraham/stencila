{
  "$schema": "https://stencila.dev/meta.schema.json",
  "$id": "https://stencila.dev/List.schema.json",
  "@id": "schema:ItemList",
  "title": "List",
  "extends": [
    "Entity"
  ],
  "description": "A list of items.",
  "$comment": "This is an implementation, and renaming, of schema.org [`ItemList`](https://schema.org/ItemList).\nRenaming was done as `List` was considered a more developer friendly alternative. Similarly,\nschema.org properties `itemListElement` and `itemListOrder` were renamed to `items` and `order`.\nNote that, as with every other such renaming in Stencila Schema, a mapping between names is\ndefined and it is trivial to save Stencila Schema documents using the schema.org vocabulary if so desired.\n\nAnalogues of `List` in other schema include:\n  - JATS XML [`<list>`](https://jats.nlm.nih.gov/articleauthoring/tag-library/1.2/element/list.html)\n  - HTML [`<ul>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul) and [`<ol>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol)\n  - MDAST [`List`](https://github.com/syntax-tree/mdast#list)\n  - OpenDocument [`<text:list>`](http://docs.oasis-open.org/office/v1.2/os/OpenDocument-v1.2-os-part1.html#__RefHeading__1415148_253892949)\n",
  "html": {
    "special": true
  },
  "markdown": {
    "special": true
  },
  "required": [
    "type",
    "items",
    "order"
  ],
  "core": [
    "id"
  ],
  "properties": {
    "type": {
      "@id": "schema:type",
      "description": "The type of this item",
      "$comment": "This is a special property analogous to JSON-LD's `@type` keyword.\n",
      "type": "string"
    },
    "id": {
      "@id": "schema:id",
      "description": "The identifier for this item",
      "$comment": "This is a special property analogous to JSON-LD's `@id` keyword.\n",
      "strip": [
        "id"
      ],
      "html": {
        "attr": "id"
      },
      "type": "string"
    },
    "items": {
      "@id": "schema:itemListElement",
      "description": "The items in the list.",
      "type": "array",
      "items": {
        "$ref": "ListItem.schema.json"
      }
    },
    "order": {
      "@id": "schema:itemListOrder",
      "description": "The ordering of the list.",
      "$ref": "ListOrder.schema.json"
    }
  }
}